/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DCIPGovernor, DCIPGovernorInterface } from "../DCIPGovernor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IDCIP",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_proposalReward",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundAllocation",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "blockAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blockedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fundAllocation",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "_deadline",
            type: "uint64",
          },
        ],
        internalType: "struct Timers.BlockNumber",
        name: "voteStart",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "_deadline",
            type: "uint64",
          },
        ],
        internalType: "struct Timers.BlockNumber",
        name: "voteEnd",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "votesAgainst",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesForQuorum",
        type: "uint256",
      },
      {
        internalType: "enum ProposalState",
        name: "proposalState",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getVote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVotingWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "invalidateProposal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalReward",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fundAllocation",
        type: "uint256",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "quorumReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_proposalReward",
        type: "uint16",
      },
    ],
    name: "setProposalReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "setProposalTreshhold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nrOfTokens",
        type: "uint256",
      },
    ],
    name: "setVotesForQuorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "period",
        type: "uint64",
      },
    ],
    name: "setVotingPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IDCIP",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "unblockAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "voteSucceeded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votesForQuorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fe438038062001fe48339810160408190526200003491620000f7565b816200004033620000a7565b600180546001600160a01b039092166001600160a01b0319909216919091179055600060045569054b40b1f852bda00000600555600680546001600160401b031916620313801790556008805461ffff90921661ffff199092169190911790555062000144565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156200010a578182fd5b82516001600160a01b038116811462000121578283fd5b602084015190925061ffff8116811462000139578182fd5b809150509250929050565b611e9080620001546000396000f3fe608060405234801561001057600080fd5b50600436106101a25760003560e01c80638da5cb5b116100ee578063b7112d1511610097578063d5da24b911610071578063d5da24b914610442578063da35c66414610455578063f2fde38b1461045e578063fc0c546a1461047157600080fd5b8063b7112d15146103e3578063c7f758a814610404578063d4a8dd981461042f57600080fd5b8063ad2bb1b3116100c8578063ad2bb1b314610394578063b24b7ffd146103a7578063b58131b0146103d457600080fd5b80638da5cb5b1461032f5780638f80fbca1461036e578063ab43015a1461038157600080fd5b80634b60085711610150578063715018a61161012a578063715018a6146102f157806380603c1c146102fb5780638d73b0311461030457600080fd5b80634b600857146102725780634f93208a146102855780636b0dd90f146102a857600080fd5b80634254582511610181578063425458251461020357806342a68c761461024c5780634647be851461025f57600080fd5b80622e960b146101a757806315373e3d146101cf578063186d9d88146101f0575b600080fd5b6101ba6101b5366004611b06565b610491565b60405190151581526020015b60405180910390f35b6101e26101dd366004611b58565b61054f565b6040519081526020016101c6565b6101ba6101fe366004611a59565b610565565b6101ba610211366004611a73565b600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352600b9093019052205460ff1690565b6101e261025a366004611b28565b610637565b6101ba61026d366004611b28565b610758565b6101ba610280366004611b28565b61081d565b6101ba610293366004611a59565b60076020526000908152604090205460ff1681565b6101ba6102b6366004611a73565b600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352600c9093019052205460ff1690565b6102f96108a8565b005b6101e260055481565b6101ba610312366004611b28565b600090815260026020526040902060088101546009909101541190565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c6565b6101ba61037c366004611b8b565b610935565b6101e261038f366004611a9c565b610a91565b6101ba6103a2366004611a59565b610be2565b6006546103bb9067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101c6565b6804563918244f4000006101e2565b6008546103f19061ffff1681565b60405161ffff90911681526020016101c6565b610417610412366004611b28565b610cb8565b6040516101c69c9b9a99989796959493929190611c57565b6101ba61043d366004611b28565b610f33565b6101e2610450366004611a59565b610f62565b6101e260045481565b6102f961046c366004611a59565b61100c565b6001546103499073ffffffffffffffffffffffffffffffffffffffff1681565b6000805473ffffffffffffffffffffffffffffffffffffffff163314610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b50600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff831617905560015b919050565b60003361055d84828561113c565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146105e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260076020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600190565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146106b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b66038d7ea4c68000821161074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4174206c6561737420312e3030302e303030204443495020697320726571756960448201527f7265640000000000000000000000000000000000000000000000000000000000606482015260840161050f565b50600581905590565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146107da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b50600081815260026020526040902060070180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790556001919050565b6000805473ffffffffffffffffffffffffffffffffffffffff16331461089f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b50600355600190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b6109336000611201565b565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146109b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b6138408267ffffffffffffffff161015610a53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f566f74696e6720706572696f642063616e6e6f74206265206c6573732074686160448201527f6e20313220686f75727300000000000000000000000000000000000000000000606482015260840161050f565b506006805467ffffffffffffffff83167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009091161790556001919050565b3360009081526007602052604081205460ff16151560011415610b36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f596f7572206164647265737320697320626c6f636b65642066726f6d206d616b60448201527f696e672070726f706f73616c7300000000000000000000000000000000000000606482015260840161050f565b6804563918244f400000610b4933610f62565b1015610bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f50726f706f73657220766f7465732062656c6f772070726f706f73616c20746860448201527f726573686f6c6400000000000000000000000000000000000000000000000000606482015260840161050f565b61055d848484611276565b6000805473ffffffffffffffffffffffffffffffffffffffff163314610c64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260076020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915590565b6000806060806000610ce06040518060200160405280600067ffffffffffffffff1681525090565b6040805160208101909152600081526000888152600260205260408120819081908190819081610d0f8f61142d565b905081600001548260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360020184600301856004015486600501876006018860070160009054906101000a900460ff1689600801548a600901548b600a01548b898054610d7e90611d75565b80601f0160208091040260200160405190810160405280929190818152602001828054610daa90611d75565b8015610df75780601f10610dcc57610100808354040283529160200191610df7565b820191906000526020600020905b815481529060010190602001808311610dda57829003601f168201915b50505050509950888054610e0a90611d75565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3690611d75565b8015610e835780601f10610e5857610100808354040283529160200191610e83565b820191906000526020600020905b815481529060010190602001808311610e6657829003601f168201915b50505050509850866040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509650856040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505095509d509d509d509d509d509d509d509d509d509d509d509d50505091939597999b5091939597999b565b600081815260026020526040812060088101546009820154610f559190611d31565b600a909101541092915050565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015260009216906370a082319060240160206040518083038186803b158015610fce57600080fd5b505afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110069190611b40565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b73ffffffffffffffffffffffffffffffffffffffff8116611130576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161050f565b61113981611201565b50565b600060016111498561142d565b6005811115611181577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146111e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f50726f706f73616c206973206e6f742063757272656e746c7920616374697665604482015260640161050f565b60006111f384610f62565b905061055d8585858461159a565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061128243611831565b60065490915060009061129f9067ffffffffffffffff1683611d49565b60045460008181526002602081815260409092208381556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790558a5194955092936112f992918401918b0190611900565b50865161130f90600383019060208a0190611900565b5060048101869055604080516020808201835267ffffffffffffffff80881692839052600580860180547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000908116909517905584519283018552908716918290526006850180549093169091179091556007830180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000169055600060098401819055600884015554600a830155517ff5dc0da9afa6d080780a49fd8c680f03d2ddf3c067cd6d0c85360c096644d2d3906113ef9084908b908a90611d08565b60405180910390a161140c8233600161140733610f62565b61159a565b6004805490600061141c83611dc3565b909155509198975050505050505050565b6000818152600260205260408120600781015460ff16156114515750600592915050565b6007810154610100900460ff161561146c5750600292915050565b6040805160208101909152600582015467ffffffffffffffff169081905243101561149a5750600092915050565b6040805160208101909152600682015467ffffffffffffffff16908190524310156114c85750600192915050565b6040805160208101909152600682015467ffffffffffffffff1681526114ed906118cf565b15611532576114fb83610f33565b801561151d575060008381526002602052604090206008810154600990910154115b61152857600361152b565b60045b9392505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964000000604482015260640161050f565b50919050565b600084815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845260079092529091205460ff1615156001141561163c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4164647265737320626c6f636b65642066726f6d20766f74696e670000000000604482015260640161050f565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600b8201602052604090205460ff16156116ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f566f74652068617320616c7265616479206265656e2063617374210000000000604482015260640161050f565b6001821015611739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f496e76616c696420766f74652077656967687400000000000000000000000000604482015260640161050f565b6001831515141561176357818160090160008282546117589190611d31565b9091555061177d9050565b818160080160008282546117779190611d31565b90915550505b73ffffffffffffffffffffffffffffffffffffffff84166000818152600b83016020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00908116600117909155600c860183529281902080548815159416841790558051938452908301889052820152606081018390527f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c469060800160405180910390a15050505050565b600067ffffffffffffffff8211156118cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f3420626974730000000000000000000000000000000000000000000000000000606482015260840161050f565b5090565b60006118e5825167ffffffffffffffff16151590565b8015611006575050514367ffffffffffffffff909116111590565b82805461190c90611d75565b90600052602060002090601f01602090048101928261192e5760008555611974565b82601f1061194757805160ff1916838001178555611974565b82800160010185558215611974579182015b82811115611974578251825591602001919060010190611959565b506118cb9291505b808211156118cb576000815560010161197c565b803573ffffffffffffffffffffffffffffffffffffffff8116811461054a57600080fd5b600082601f8301126119c4578081fd5b813567ffffffffffffffff808211156119df576119df611e2b565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611a2557611a25611e2b565b81604052838152866020858801011115611a3d578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611a6a578081fd5b61152b82611990565b60008060408385031215611a85578081fd5b611a8e83611990565b946020939093013593505050565b600080600060608486031215611ab0578081fd5b833567ffffffffffffffff80821115611ac7578283fd5b611ad3878388016119b4565b94506020860135915080821115611ae8578283fd5b50611af5868287016119b4565b925050604084013590509250925092565b600060208284031215611b17578081fd5b813561ffff8116811461152b578182fd5b600060208284031215611b39578081fd5b5035919050565b600060208284031215611b51578081fd5b5051919050565b60008060408385031215611b6a578182fd5b8235915060208301358015158114611b80578182fd5b809150509250929050565b600060208284031215611b9c578081fd5b813567ffffffffffffffff8116811461152b578182fd5b60068110611bea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60008151808452815b81811015611c1357602081850181015186830182015201611bf7565b81811115611c245782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60006101808e835273ffffffffffffffffffffffffffffffffffffffff8e166020840152806040840152611c8d8184018e611bee565b90508281036060840152611ca1818d611bee565b91505089608083015267ffffffffffffffff808a511660a08401528089511660c084015250611cd460e083018815159052565b856101008301528461012083015283610140830152611cf7610160830184611bb3565b9d9c50505050505050505050505050565b838152606060208201526000611d216060830185611bee565b9050826040830152949350505050565b60008219821115611d4457611d44611dfc565b500190565b600067ffffffffffffffff808316818516808303821115611d6c57611d6c611dfc565b01949350505050565b600181811c90821680611d8957607f821691505b60208210811415611594577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611df557611df5611dfc565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220bd91b88cf2d70ff4867c7c2ab2b0c92d25d8b2b9aef9f865d704622fc6969a1564736f6c63430008040033";

export class DCIPGovernor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    _proposalReward: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DCIPGovernor> {
    return super.deploy(
      _token,
      _proposalReward,
      overrides || {}
    ) as Promise<DCIPGovernor>;
  }
  getDeployTransaction(
    _token: string,
    _proposalReward: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _proposalReward, overrides || {});
  }
  attach(address: string): DCIPGovernor {
    return super.attach(address) as DCIPGovernor;
  }
  connect(signer: Signer): DCIPGovernor__factory {
    return super.connect(signer) as DCIPGovernor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCIPGovernorInterface {
    return new utils.Interface(_abi) as DCIPGovernorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DCIPGovernor {
    return new Contract(address, _abi, signerOrProvider) as DCIPGovernor;
  }
}
